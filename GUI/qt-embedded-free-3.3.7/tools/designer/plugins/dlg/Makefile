#############################################################################
# Makefile for building: libdlgplugin.a
# Generated by qmake (1.07a) (Qt 3.3.7) on: Wed Nov 12 11:11:21 2008
# Project:  dlg.pro
# Template: lib
# Command: $(QMAKE) -spec /mnt/knoppix.build/LINBO/GUI/qt-embedded-free-3.3.7/mkspecs/qws/linux-x86-g++ -o Makefile dlg.pro
#############################################################################

####### Compiler, tools and options

CC       = gcc-4.1
CXX      = g++-4.1
LEX      = flex
YACC     = yacc
CFLAGS   = -pipe -DQWS -static -Wall -W -Os -funit-at-a-time -fomit-frame-pointer -fPIC  -DQT_INTERNAL_XML -DQT_NO_DEBUG
CXXFLAGS = -pipe -DQWS -static -Wall -W -Os -funit-at-a-time -fomit-frame-pointer -fPIC  -DQT_INTERNAL_XML -DQT_NO_DEBUG
LEXFLAGS = 
YACCFLAGS= -d
INCPATH  = -I/mnt/knoppix.build/LINBO/GUI/qt-embedded-free-3.3.7/mkspecs/qws/linux-x86-g++ -I. -I../../interfaces -I../../../../include -I.moc/release-static-emb-x86/
AR       = ar cqs
RANLIB   = 
MOC      = /mnt/knoppix.build/LINBO/GUI/qt-embedded-free-3.3.7/bin/moc
UIC      = /mnt/knoppix.build/LINBO/GUI/qt-embedded-free-3.3.7/bin/uic -L /mnt/knoppix.build/LINBO/GUI/qt-embedded-free-3.3.7/plugins
QMAKE    = /mnt/knoppix.build/LINBO/GUI/qt-embedded-free-3.3.7/bin/qmake
TAR      = tar -cf
GZIP     = gzip -9f
COPY     = cp -f
COPY_FILE= $(COPY)
COPY_DIR = $(COPY) -R
INSTALL_FILE= $(COPY_FILE)
INSTALL_DIR = $(COPY_DIR)
DEL_FILE = rm -f
SYMLINK  = ln -sf
DEL_DIR  = rmdir
MOVE     = mv -f
CHK_DIR_EXISTS= test -d
MKDIR    = mkdir -p

####### Output directory

OBJECTS_DIR = .obj/release-static-emb-x86/

####### Files

HEADERS = dlg2ui.h
SOURCES = main.cpp \
		dlg2ui.cpp
OBJECTS = .obj/release-static-emb-x86/main.o \
		.obj/release-static-emb-x86/dlg2ui.o
FORMS = 
UICDECLS = 
UICIMPLS = 
SRCMOC   = 
OBJMOC = 
DIST	   = ../../../../src/qt_professional.pri \
		dlg.pro
QMAKE_TARGET = dlgplugin
DESTDIR  = ../../../../plugins/designer/
TARGET   = libdlgplugin.a
TARGETD   = libdlgplugin.a

first: all
####### Implicit rules

.SUFFIXES: .c .o .cc

.cc.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o $@ $<

.c.o:
	$(CC) -c $(CFLAGS) $(INCPATH) -o $@ $<

####### Build rules

all: Makefile ../../../../plugins/designer/$(TARGET) 

staticlib: ../../../../plugins/designer/$(TARGET)

../../../../plugins/designer/$(TARGET):  $(UICDECLS) $(OBJECTS) $(OBJMOC) $(OBJCOMP) 
	test -d ../../../../plugins/designer/ || mkdir -p ../../../../plugins/designer/
	-$(DEL_FILE) $(TARGET)
	$(AR) $(TARGET) $(OBJECTS) $(OBJMOC)
	-$(DEL_FILE) ../../../../plugins/designer/$(TARGET)
	-$(MOVE) $(TARGET) ../../../../plugins/designer/


mocables: $(SRCMOC)
uicables: $(UICDECLS) $(UICIMPLS)

$(MOC): 
	( cd /mnt/knoppix.build/LINBO/GUI/qt-embedded-free-3.3.7/src/moc && $(MAKE) )

Makefile: dlg.pro ../../../../.qmake.cache /mnt/knoppix.build/LINBO/GUI/qt-embedded-free-3.3.7/mkspecs/qws/linux-x86-g++/qmake.conf ../../../../src/qt_professional.pri \
		../../../../lib/libqte.prl
	$(QMAKE) -spec /mnt/knoppix.build/LINBO/GUI/qt-embedded-free-3.3.7/mkspecs/qws/linux-x86-g++ -o Makefile dlg.pro
qmake: 
	@$(QMAKE) -spec /mnt/knoppix.build/LINBO/GUI/qt-embedded-free-3.3.7/mkspecs/qws/linux-x86-g++ -o Makefile dlg.pro

dist: 
	@mkdir -p .obj/release-static-emb-x86/dlgplugin && $(COPY_FILE) --parents $(SOURCES) $(HEADERS) $(FORMS) $(DIST) .obj/release-static-emb-x86/dlgplugin/ && ( cd `dirname .obj/release-static-emb-x86/dlgplugin` && $(TAR) dlgplugin.tar dlgplugin && $(GZIP) dlgplugin.tar ) && $(MOVE) `dirname .obj/release-static-emb-x86/dlgplugin`/dlgplugin.tar.gz . && $(DEL_FILE) -r .obj/release-static-emb-x86/dlgplugin

mocclean:

uiclean:

yaccclean:
lexclean:
clean:
	-$(DEL_FILE) $(OBJECTS)
	-$(DEL_FILE) *~ core *.core


####### Sub-libraries

distclean: clean
	-$(DEL_FILE) ../../../../plugins/designer/$(TARGET) $(TARGET)


FORCE:

####### Compile

.obj/release-static-emb-x86/main.o: main.cpp dlg2ui.h
	$(CC) -c $(CFLAGS) $(INCPATH) -o .obj/release-static-emb-x86/main.o main.cpp

.obj/release-static-emb-x86/dlg2ui.o: dlg2ui.cpp dlg2ui.h
	$(CC) -c $(CFLAGS) $(INCPATH) -o .obj/release-static-emb-x86/dlg2ui.o dlg2ui.cpp

####### Install

install_target: all 
	@$(CHK_DIR_EXISTS) "$(INSTALL_ROOT)/usr/plugins/designer/" || $(MKDIR) "$(INSTALL_ROOT)/usr/plugins/designer/"
	-$(INSTALL_FILE) "../../../../plugins/designer/$(TARGET)" "$(INSTALL_ROOT)/usr/plugins/designer/$(TARGET)"

uninstall_target: 
	-$(DEL_FILE) "$(INSTALL_ROOT)/usr/plugins/designer/$(TARGET)"
	-$(DEL_DIR) "$(INSTALL_ROOT)/usr/plugins/designer/"


install: install_target  

uninstall: uninstall_target  

