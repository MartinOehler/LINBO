#############################################################################
# Makefile for building: t10
# Generated by qmake (1.07a) (Qt 3.3.7) on: Wed Nov 12 11:11:25 2008
# Project:  t10.pro
# Template: app
# Command: $(QMAKE) -spec /mnt/knoppix.build/LINBO/GUI/qt-embedded-free-3.3.7/mkspecs/qws/linux-x86-g++ -o Makefile t10.pro
#############################################################################

####### Compiler, tools and options

CC       = gcc-4.1
CXX      = g++-4.1
LEX      = flex
YACC     = yacc
CFLAGS   = -pipe -DQWS -static -Wall -W -Os -funit-at-a-time -fomit-frame-pointer  -DQT_NO_DEBUG
CXXFLAGS = -pipe -DQWS -static -Wall -W -Os -funit-at-a-time -fomit-frame-pointer  -DQT_NO_DEBUG
LEXFLAGS = 
YACCFLAGS= -d
INCPATH  = -I/mnt/knoppix.build/LINBO/GUI/qt-embedded-free-3.3.7/mkspecs/qws/linux-x86-g++ -I. -I../../include -I.moc/release-static-emb-x86/
LINK     = g++-4.1
LFLAGS   =  -Wl,-rpath,/usr/lib
LIBS     = $(SUBLIBS) -L/mnt/knoppix.build/LINBO/GUI/qt-embedded-free-3.3.7/lib -lqte -ldl
AR       = ar cqs
RANLIB   = 
MOC      = /mnt/knoppix.build/LINBO/GUI/qt-embedded-free-3.3.7/bin/moc
UIC      = /mnt/knoppix.build/LINBO/GUI/qt-embedded-free-3.3.7/bin/uic -L /mnt/knoppix.build/LINBO/GUI/qt-embedded-free-3.3.7/plugins
QMAKE    = /mnt/knoppix.build/LINBO/GUI/qt-embedded-free-3.3.7/bin/qmake
TAR      = tar -cf
GZIP     = gzip -9f
COPY     = cp -f
COPY_FILE= $(COPY)
COPY_DIR = $(COPY) -R
INSTALL_FILE= $(COPY_FILE)
INSTALL_DIR = $(COPY_DIR)
DEL_FILE = rm -f
SYMLINK  = ln -sf
DEL_DIR  = rmdir
MOVE     = mv -f
CHK_DIR_EXISTS= test -d
MKDIR    = mkdir -p

####### Output directory

OBJECTS_DIR = .obj/release-static-emb-x86/

####### Files

HEADERS = cannon.h \
		lcdrange.h
SOURCES = cannon.cpp \
		lcdrange.cpp \
		main.cpp
OBJECTS = .obj/release-static-emb-x86/cannon.o \
		.obj/release-static-emb-x86/lcdrange.o \
		.obj/release-static-emb-x86/main.o
FORMS = 
UICDECLS = 
UICIMPLS = 
SRCMOC   = .moc/release-static-emb-x86/moc_cannon.cpp \
		.moc/release-static-emb-x86/moc_lcdrange.cpp
OBJMOC = 
DIST	   = t10.pro
QMAKE_TARGET = t10
DESTDIR  = 
TARGET   = t10

first: all
####### Implicit rules

.SUFFIXES: .c .o .cc

.cc.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o $@ $<

.c.o:
	$(CC) -c $(CFLAGS) $(INCPATH) -o $@ $<

####### Build rules

all: Makefile $(TARGET)

$(TARGET):  $(UICDECLS) $(OBJECTS) $(OBJMOC)  
	$(LINK) $(LFLAGS) -o $(TARGET) $(OBJECTS) $(OBJMOC) $(OBJCOMP) $(LIBS)

mocables: $(SRCMOC)
uicables: $(UICDECLS) $(UICIMPLS)

$(MOC): 
	( cd /mnt/knoppix.build/LINBO/GUI/qt-embedded-free-3.3.7/src/moc && $(MAKE) )

Makefile: t10.pro ../../.qmake.cache /mnt/knoppix.build/LINBO/GUI/qt-embedded-free-3.3.7/mkspecs/qws/linux-x86-g++/qmake.conf ../../lib/libqte.prl
	$(QMAKE) -spec /mnt/knoppix.build/LINBO/GUI/qt-embedded-free-3.3.7/mkspecs/qws/linux-x86-g++ -o Makefile t10.pro
qmake: 
	@$(QMAKE) -spec /mnt/knoppix.build/LINBO/GUI/qt-embedded-free-3.3.7/mkspecs/qws/linux-x86-g++ -o Makefile t10.pro

dist: 
	@mkdir -p .obj/release-static-emb-x86/t10 && $(COPY_FILE) --parents $(SOURCES) $(HEADERS) $(FORMS) $(DIST) .obj/release-static-emb-x86/t10/ && ( cd `dirname .obj/release-static-emb-x86/t10` && $(TAR) t10.tar t10 && $(GZIP) t10.tar ) && $(MOVE) `dirname .obj/release-static-emb-x86/t10`/t10.tar.gz . && $(DEL_FILE) -r .obj/release-static-emb-x86/t10

mocclean:
	-$(DEL_FILE) $(SRCMOC)

uiclean:

yaccclean:
lexclean:
clean: mocclean
	-$(DEL_FILE) $(OBJECTS)
	-$(DEL_FILE) *~ core *.core


####### Sub-libraries

distclean: clean
	-$(DEL_FILE) $(TARGET) $(TARGET)


FORCE:

####### Compile

.obj/release-static-emb-x86/cannon.o: cannon.cpp cannon.h
	$(CC) -c $(CFLAGS) $(INCPATH) -o .obj/release-static-emb-x86/cannon.o cannon.cpp

.obj/release-static-emb-x86/lcdrange.o: lcdrange.cpp lcdrange.h
	$(CC) -c $(CFLAGS) $(INCPATH) -o .obj/release-static-emb-x86/lcdrange.o lcdrange.cpp

.obj/release-static-emb-x86/main.o: main.cpp lcdrange.h \
		cannon.h
	$(CC) -c $(CFLAGS) $(INCPATH) -o .obj/release-static-emb-x86/main.o main.cpp

.moc/release-static-emb-x86/moc_cannon.cpp: $(MOC) cannon.h
	$(MOC) cannon.h -o .moc/release-static-emb-x86/moc_cannon.cpp

.moc/release-static-emb-x86/moc_lcdrange.cpp: $(MOC) lcdrange.h
	$(MOC) lcdrange.h -o .moc/release-static-emb-x86/moc_lcdrange.cpp

####### Install

install:  

uninstall:  

