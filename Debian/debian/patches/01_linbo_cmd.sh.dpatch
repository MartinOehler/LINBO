#!/bin/sh /usr/share/dpatch/dpatch-run

@DPATCH@

--- LINBO/Binaries/linbo_cmd.sh	2008-07-31 11:26:57.000000000 +0200
+++ LINBO/Binaries/linbo_cmd.sh.new	2008-07-31 11:25:13.000000000 +0200
@@ -51,6 +51,31 @@
 [Ll][Ii][Nn][Bb][Oo].[Ll][Ss][Tt]
 tmp/*'
 
+# tschmitt: send logfile to linbo user on the server
+sendlog(){
+ [ -s /tmp/linbo.log ] || return 1
+ cp /tmp/linbo.log /cache
+ [ -s /tmp/dhcp.log ] || return 1
+ local domain="$(grep -m1 ^domain= /tmp/dhcp.log | awk -F\' '{ print $2 }')"
+ [ -z "$domain" ] && return 1
+ local logname="$(grep -m1 ^hostname= /tmp/dhcp.log | awk -F\' '{ print $2 }')"
+ [ -z "$logname" ] && return 1
+ local mailhub="$(grep -m1 ^serverid= /tmp/dhcp.log | awk -F\' '{ print $2 }')"
+ [ -z "$mailhub" ] && return 1
+ local body="$(cat /tmp/linbo.log)"
+ mkdir -p /etc/ssmtp
+ echo "mailhub=$mailhub:25" > /etc/ssmtp/ssmtp.conf
+ ssmtp -oi linbo@$domain << EOF
+To: linbo@$domain
+Subject: LOG $logname
+
+$body
+EOF
+ RC="$?"
+ [ "$RC" = "0" ] && rm /tmp/linbo.log
+ return "$RC"
+}
+
 bailout(){
  echo "DEBUG: bailout() called, linbo_cmd=$PID, my_pid=$$" >&2
  echo ""
@@ -79,6 +104,7 @@
  cd /
  sync; sync; sleep 1
  umount /mnt >/dev/null 2>&1 || umount -l /mnt >/dev/null 2>&1
+ sendlog
  umount /cache >/dev/null 2>&1 || umount -l /cache >/dev/null 2>&1
  umount /cloop >/dev/null 2>&1 || umount -l /cloop >/dev/null 2>&1
  rmmod cloop >/dev/null 2>&1
@@ -127,8 +153,14 @@
 # Check for "nonetwork" boot option
 localmode(){
  case "$(cat /proc/cmdline)" in *\ nonetwork*|*\ localmode*) return 0;; esac
- ping -c1 "$1" 1>/dev/null || return 0
- return 1
+ [ -s /tmp/dhcp.log ] || return 0
+ local serverip="$(grep -m1 ^serverid= /tmp/dhcp.log | awk -F\' '{ print $2 }')"
+ [ -z "$serverip" ] && return 0
+ if (expr match "$serverip" '\(\([1-9]\|[1-9][0-9]\|1[0-9]\{2\}\|2[0-4][0-9]\|25[0-4]\)\.\([0-9]\|[1-9][0-9]\|1[0-9]\{2\}\|2[0-4][0-9]\|25[0-4]\)\.\([0-9]\|[1-9][0-9]\|1[0-9]\{2\}\|2[0-4][0-9]\|25[0-4]\)\.\([1-9]\|[1-9][0-9]\|1[0-9]\{2\}\|2[0-4][0-9]\|25[0-4]\)$\)'); then
+  return 1
+ else
+  return 0
+ fi
 }
 
 cmd="$1"
@@ -211,11 +243,12 @@
    case "$3" in -r) OPTS="$OPTS,ro" ;; esac
    ntfs-3g "$1" "$2" -o "$OPTS" 2>/dev/null; RC="$?"
    ;;
-  vfat)
-   OPTS="umask=000,shortname=winnt"
-   case "$3" in -r) OPTS="$OPTS,ro" ;; esac
-   mount -o "$OPTS" "$1" "$2" ; RC="$?"
-   ;;
+#  vfat)
+# tschmitt: windows does not start here with this
+#   OPTS="umask=000,shortname=winnt"
+#   case "$3" in -r) OPTS="$OPTS,ro" ;; esac
+#   mount -o "$OPTS" "$1" "$2" ; RC="$?"
+#   ;;
   *)
    mount $3 "$1" "$2" ; RC="$?"
    ;;
@@ -542,6 +575,7 @@
  else
   echo "Konnte Betriebssystem-Partition $1 nicht mounten." >&2
   umount /mnt 2>/dev/null
+  sendlog
   umount /cache 2>/dev/null
   return 1
  fi
@@ -556,6 +590,7 @@
  fi
 
  umount /mnt 2>/dev/null
+ sendlog
  umount /cache 2>/dev/null
 
  if [ -n "$LOADED" ]; then
@@ -674,7 +709,9 @@
      if mountpart /dev/cloop /cloop -r ; then
       echo "Starte Kompression von $2 -> $3 (differentiell)."
       mkexclude
-      interruptible rsync -Haz --exclude="/.linbo" --exclude-from="/tmp/rsync.exclude" --delete --delete-excluded --partial --only-write-batch="$3" /mnt/ /cloop
+      local ROPTS="-Haz"
+      [ "$(fstype "$2")" = "vfat" ] && ROPTS="-rtz"
+      interruptible rsync "$ROPTS" --exclude="/.linbo" --exclude-from="/tmp/rsync.exclude" --delete --delete-excluded --partial --only-write-batch="$3" /mnt/ /cloop
       RC="$?"
       umount /cloop
       if [ "$RC" = "0" ]; then
@@ -788,11 +825,14 @@
 sync_cloop(){
  # echo -n "sync_cloop " ;  printargs "$@"
  local RC=1
+ local ROPTS="-Ha"
+# [ "$(fstype "$2")" = "vfat" ] && ROPTS="-rt --inplace"
+ [ "$(fstype "$2")" = "vfat" ] && ROPTS="-rt"
  if mountpart "$2" /mnt -w ; then
   case "$1" in
    *.[Rr][Ss][Yy]*)
     rm -f "$TMP"
-    interruptible rsync -Haz --partial --delete --inplace --read-batch="$1" /mnt >"$TMP" 2>&1 ; RC="$?"
+    interruptible rsync "$ROPTS" --compress --partial --delete --read-batch="$1" /mnt >"$TMP" 2>&1 ; RC="$?"
     if [ "$RC" != "0" ]; then
      cat "$TMP" >&2
      echo "Fehler beim Synchronisieren des differentiellen Images \"$1\" nach $2, rsync-Fehlercode: $RC." >&2
@@ -815,7 +855,7 @@
       # Therefore we try it without $FROMLIST, which gives the expected result.
       #interruptible rsync -Ha --partial $FROMLIST --exclude="/.linbo" --exclude-from="/tmp/rsync.exclude" --delete --delete-excluded /cloop/ /mnt ; RC="$?"
       rm -f "$TMP"
-      interruptible rsync -Ha --partial --exclude="/.linbo" --exclude-from="/tmp/rsync.exclude" --inplace --delete --delete-excluded /cloop/ /mnt >"$TMP" 2>&1 ; RC="$?"
+      interruptible rsync "$ROPTS" --partial --exclude="/.linbo" --exclude-from="/tmp/rsync.exclude" --delete --delete-excluded /cloop/ /mnt >"$TMP" 2>&1 ; RC="$?"
       umount /cloop
       if [ "$RC" != "0" ]; then
        cat "$TMP" >&2
@@ -915,6 +955,7 @@
     echo "Patche System mit $patchfile"
     rm -f "$TMP"
     sed 's|{\$HostName\$}|'"`hostname`"'|g' "$patchfile" > "$TMP"
+    dos2unix "$TMP"
     # tschmitt: different registry patching for Win98
     if [ -e /mnt/[Nn][Tt][Ll][Dd][Rr] ]; then
      patch_registry "$TMP" /mnt
@@ -937,7 +978,7 @@
    umount /mnt || umount -l /mnt
   fi
  fi
- cd / ; umount /cache
+ cd / ; sendlog ; umount /cache
  return "$RC"
 }
 
@@ -948,7 +989,7 @@
  mountcache "$1" || return "$?"
  if ! cache_writable; then
   echo "Cache-Partiion ist nicht schreibbar, Abbruch." >&2
-  umount /cache
+  sendlog ; umount /cache
   return 1
  fi
  cd /cache
@@ -970,7 +1011,7 @@
    ;;
  esac
  [ "$RC" = "0" ] && echo "Fertig." || echo "Fehler." >&2
- cd / ; umount /cache
+ cd / ; sendlog ; umount /cache
  return "$RC"
 }
 
@@ -1016,6 +1057,52 @@
 imagesize=$4"
 }
 
+# tschmitt
+# fetch UseMulticast from start.conf
+usemulticast(){
+ local multicast=""
+ [ -s /start.conf ] || return 1
+ multicast=`grep -m1 ^UseMulticast /start.conf | awk -F= '{ print $2 }' | awk '{ print $1 }'`
+ echo "$multicast" | tr A-Z a-z
+}
+
+# get_multicast_server file
+get_multicast_server(){
+ local file=""
+ local serverport=""
+ local relax=""
+ while read file serverport relax; do
+  if [ "$file" = "$1" ]; then
+   echo "${serverport%%:*}"
+   return 0
+  fi
+ done <multicast.list
+ return 1
+}
+
+# get_multicast_port file
+get_multicast_port(){
+ local file=""
+ local serverport=""
+ local relax=""
+ while read file serverport relax; do
+  if [ "$file" = "$1" ]; then
+   echo "${serverport##*:}"
+   return 0
+  fi
+ done <multicast.list
+ return 1
+}
+
+# download_multicast server port file
+download_multicast(){
+ local interface="$(route -n | tail -1 | awk '/^0.0.0.0/{print $NF}')"
+ echo "MULTICAST Download $interface($1):$2 -> $3"
+ echo "udp-receiver --nosync --nokbd --interface $interface --rcvbuf 4194304 --portbase $2 --file $3"
+ interruptible udp-receiver --nosync --nokbd --interface "$interface" --rcvbuf 4194304 --portbase "$2" --file "$3"
+ return "$?"
+}
+
 # Download main file and supplementary files
 # download_all server mainfile additional_files...
 download_all(){
@@ -1039,6 +1126,7 @@
 download_if_newer(){
  local RC=0
  local DOWNLOAD_ALL=""
+ local FTYPE=""
  if [ ! -s "$2" -o ! -s "$2".info ]; then # File not there, download all
   DOWNLOAD_ALL="true"
  else
@@ -1064,9 +1152,30 @@
    mv -f "$2".info.old "$2".info
   fi
  fi
+ case "$2" in
+  *.[Cc][Ll][Oo][Oo][Pp]|*.[Rr][Ss][Yy][Nn][Cc]) FTYPE="image" ;;
+ esac
  if [ -n "$DOWNLOAD_ALL" ]; then
-  download_all "$1" "$2" "$2".info "$2".list "$2".desc "$2".reg
-  RC="$?"
+  if [ "$(usemulticast)" = "yes" -a -n "$FTYPE" ]; then
+   download "$server" "multicast.list" important
+   if [ -s /cache/multicast.list ]; then
+    local MPORT="$(get_multicast_port "$2")"
+    if [ -n "$MPORT" ]; then
+     download_multicast "$1" "$MPORT" "$2"
+     RC="$?"
+    else
+     RC=1
+    fi
+   else
+    RC=1
+   fi 
+   if [ "$RC" = "0" ]; then
+    download_all "$1" "$2".info "$2".list "$2".desc "$2".reg ; RC="$?"
+   fi
+  else
+   download_all "$1" "$2" "$2".info "$2".list "$2".desc "$2".reg
+   RC="$?"
+  fi
  else
   echo "Keine neuere Version vorhanden, überspringe $2."
   RC=1
@@ -1141,7 +1250,7 @@
   RC=1
   echo "Die Datei $5 existiert nicht, und kann daher nicht hochgeladen werden." >&2
  fi
- cd ; umount /cache
+ cd ; sendlog ; umount /cache
  [ "$RC" = "0" ] && echo "Upload von $FILES nach $1 erfolgreich." || echo "Upload von $FILES nach $1 ist fehlgeschlagen." >&2
  return "$RC"
 }
@@ -1160,7 +1269,7 @@
    [ -n "$i" ] && download_if_newer "$1" "$i"
    rm -f "$i".reg 2>/dev/null ; download "$1" "$i".reg >/dev/null 2>&1
   done
-  cd / ; umount /cache
+  cd / ; sendlog ; umount /cache
   # Also update LINBO, while we are here.
   update "$1" "$2"
  fi
@@ -1168,43 +1277,6 @@
  syncl "$@"
 }
 
-# get_multicast_server file
-get_multicast_server(){
- local file=""
- local serverport=""
- local relax=""
- while read file serverport relax; do
-  if [ "$file" = "$1" ]; then
-   echo "${serverport%%:*}"
-   return 0
-  fi
- done <multicast.list
- return 1
-}
-
-# get_multicast_port file
-get_multicast_port(){
- local file=""
- local serverport=""
- local relax=""
- while read file serverport relax; do
-  if [ "$file" = "$1" ]; then
-   echo "${serverport##*:}"
-   return 0
-  fi
- done <multicast.list
- return 1
-}
-
-# download_multicast server port file
-download_multicast(){
- local interface="$(route -n | tail -1 | awk '/^0.0.0.0/{print $NF}')"
- echo "MULTICAST Download $interface($1):$2 -> $3"
- echo "udp-receiver --nosync --nokbd --interface $interface --rcvbuf 4194304 --portbase $2 --file $3"
- interruptible udp-receiver --nosync --nokbd --interface "$interface" --rcvbuf 4194304 --portbase "$2" --file "$3"
- return "$?"
-}
-
 # initcache server cachedev multicast|rsync images...
 initcache(){
  echo -n "initcache " ;  printargs "$@"
@@ -1227,7 +1299,7 @@
    download "$server" "multicast.list" important
    if [ ! -s multicast.list ]; then
     echo "Keine multicast.list gefunden, kein Multicast-Download möglich." >&2
-    umount /cache
+    sendlog ; umount /cache
     return 1
    fi
    shift
@@ -1261,7 +1333,7 @@
    done
   fi
  done
- cd / ; umount /cache
+ cd / ; sendlog ; umount /cache
  update "$server" "$cachedev"
 }
 
@@ -1326,13 +1398,13 @@
    mv "/cache/menu.lst.$group" /cache/boot/grub/menu.lst
   else
    [ -e /cache/boot/grub/menu.lst ] && rm /cache/boot/grub/menu.lst
-   mkgrubmenu "$cachedev" "linbo" "linbofs.gz" "$server" "$append"
+   mkgrubmenu "$cachedev" "linbo" "linbofs.gz" "$server" "$vga $append"
   fi
   # tschmitt: grub is installed on every start
   #grub-install --root-directory=/cache "$disk"
  fi
  RC="$?"
- cd / ; umount /cache
+ cd / ; sendlog ; umount /cache
  [ "$RC" = "0" ] && echo "LINBO update fertig." || echo "Lokale Installation von LINBO hat nicht geklappt." >&2
  return "$RC"
 }
@@ -1357,7 +1429,7 @@
   cat /cache/"$2"
  fi
  RC="$?"
- umount /cache
+ sendlog ; umount /cache
  return "$RC"
 }
 
@@ -1376,7 +1448,7 @@
   echo "Cache ist nicht schreibbar, Datei $2 nicht gespeichert." >&2
   RC=1
  fi
- umount /cache
+ sendlog ; umount /cache
  return "$RC"
 }
 
